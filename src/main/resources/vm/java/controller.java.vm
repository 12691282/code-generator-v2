package ${packageName}.controller;

import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;



//TODO 返回类型待加入

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller
{
    @Autowired
    private I${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @GetMapping("/list")
    public List<${ClassName}> list(${ClassName} ${className})
    {
        //startPage(); 分页逻辑
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});
        return list;
    }

    /**
     * 获取${functionName}详细信息
     */
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public ${ClassName} getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField})
    {
        return ${className}Service.select${ClassName}ById(${pkColumn.javaField});
    }

    /**
     * 新增${functionName}
     */
    @PostMapping
    public int add(@RequestBody ${ClassName} ${className})
    {
    #if(!$pkColumn.isIncrementField() && $pkColumn.javaType == "String")
        #set($AttrName=$pkColumn.javaField.substring(0,1).toUpperCase() + ${pkColumn.javaField.substring(1)})
    ${className}.set$AttrName(java.util.UUID.randomUUID())//设置uuid为主键
    #end
    return ${className}Service.insert${ClassName}(${className});
    }

    /**
     * 修改${functionName}
     */
    @PutMapping
    public int edit(@RequestBody ${ClassName} ${className})
    {
        return ${className}Service.update${ClassName}(${className});
    }

    /**
     * 删除${functionName}
     */
	@DeleteMapping("/{${pkColumn.javaField}s}")
    public int remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s)
    {
        return ${className}Service.delete${ClassName}ByIds(${pkColumn.javaField}s);
    }
}
